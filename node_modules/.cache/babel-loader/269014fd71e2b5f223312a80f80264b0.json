{"ast":null,"code":"\"use strict\";\n\nfunction transformDirectivesForPreCsp1Firefox(directives, basePolicy) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var result = Object.assign({}, basePolicy); // Copy `connectSrc` to `xhrSrc`\n\n  var connectSrc = directives.connectSrc;\n\n  if (connectSrc) {\n    result.xhrSrc = connectSrc;\n  } // Copy everything else\n\n\n  Object.keys(directives).forEach(function (key) {\n    if (key !== 'connectSrc') {\n      result[key] = directives[key];\n    }\n  }); // Rename `scriptSrc` values `unsafe-inline` and `unsafe-eval`\n\n  var scriptSrc = directives.scriptSrc;\n\n  if (scriptSrc) {\n    var optionsValues = [];\n\n    if (scriptSrc.indexOf(\"'unsafe-inline'\") !== -1) {\n      optionsValues.push('inline-script');\n    }\n\n    if (scriptSrc.indexOf(\"'unsafe-eval'\") !== -1) {\n      optionsValues.push('eval-script');\n    }\n\n    if (optionsValues.length !== 0) {\n      result.options = optionsValues;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = function transformDirectivesForBrowser(browser, directives) {\n  // For now, Firefox is the only browser that needs to be transformed.\n  if (!browser || browser.getBrowserName() !== 'Firefox') {\n    return directives;\n  }\n\n  var osName = browser.getOSName();\n\n  if (osName === 'iOS') {\n    return directives;\n  }\n\n  var browserVersion = parseFloat(browser.getBrowserVersion());\n\n  if (osName === 'Android' && browserVersion < 25 || browser.getPlatformType(true) === 'mobile' && browserVersion < 32) {\n    return transformDirectivesForPreCsp1Firefox(directives, {\n      defaultSrc: ['*']\n    });\n  } else if (browserVersion >= 4 && browserVersion < 23) {\n    var basePolicy = {};\n\n    if (browserVersion < 5) {\n      basePolicy.allow = ['*'];\n\n      if (directives.defaultSrc) {\n        basePolicy.allow = directives.defaultSrc;\n        directives = Object.assign({}, directives);\n        delete directives.defaultSrc;\n      }\n    } else {\n      basePolicy.defaultSrc = ['*'];\n    }\n\n    return transformDirectivesForPreCsp1Firefox(directives, basePolicy);\n  } else {\n    return directives;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}