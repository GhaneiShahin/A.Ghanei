{"ast":null,"code":"\"use strict\";\n\nfunction doesUserAgentMatchOldInternetExplorer(userAgent) {\n  if (!userAgent) {\n    return false;\n  }\n\n  var matches = /msie\\s*(\\d{1,2})/i.exec(userAgent);\n  return matches ? parseFloat(matches[1]) < 9 : false;\n}\n\nfunction getHeaderValueFromOptions(options) {\n  var directives = ['1'];\n  var isBlockMode;\n\n  if ('mode' in options) {\n    if (options.mode === 'block') {\n      isBlockMode = true;\n    } else if (options.mode === null) {\n      isBlockMode = false;\n    } else {\n      throw new Error('The `mode` option must be set to \"block\" or null.');\n    }\n  } else {\n    isBlockMode = true;\n  }\n\n  if (isBlockMode) {\n    directives.push('mode=block');\n  }\n\n  if (options.reportUri) {\n    directives.push(\"report=\" + options.reportUri);\n  }\n\n  return directives.join('; ');\n}\n\nmodule.exports = function xXssProtection(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var headerValue = getHeaderValueFromOptions(options);\n\n  if (options.setOnOldIE) {\n    return function xXssProtection(_req, res, next) {\n      res.setHeader('X-XSS-Protection', headerValue);\n      next();\n    };\n  } else {\n    return function xXssProtection(req, res, next) {\n      var value = doesUserAgentMatchOldInternetExplorer(req.headers['user-agent']) ? '0' : headerValue;\n      res.setHeader('X-XSS-Protection', value);\n      next();\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"script"}