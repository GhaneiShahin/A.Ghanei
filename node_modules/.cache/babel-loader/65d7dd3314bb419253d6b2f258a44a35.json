{"ast":null,"code":"\"use strict\";\n\nfunction parseMaxAge(option) {\n  if (option === undefined) {\n    return 0;\n  }\n\n  if (typeof option !== 'number' || option < 0) {\n    throw new Error(option + \" is not a valid value for maxAge. Please choose a positive integer.\");\n  }\n\n  return option;\n}\n\nfunction getHeaderValueFromOptions(options) {\n  options = options || {};\n  var directives = [];\n\n  if (options.enforce) {\n    directives.push('enforce');\n  }\n\n  directives.push(\"max-age=\" + parseMaxAge(options.maxAge));\n\n  if (options.reportUri) {\n    directives.push(\"report-uri=\\\"\" + options.reportUri + \"\\\"\");\n  }\n\n  return directives.join(', ');\n}\n\nmodule.exports = function expectCt(options) {\n  var headerValue = getHeaderValueFromOptions(options);\n  return function expectCt(_req, res, next) {\n    res.setHeader('Expect-CT', headerValue);\n    next();\n  };\n};","map":null,"metadata":{},"sourceType":"script"}