{"ast":null,"code":"\"use strict\";\n\nfunction getHeaderValueFromOptions(options) {\n  var DEFAULT_POLICY = 'no-referrer';\n  var ALLOWED_POLICIES = ['no-referrer', 'no-referrer-when-downgrade', 'same-origin', 'origin', 'strict-origin', 'origin-when-cross-origin', 'strict-origin-when-cross-origin', 'unsafe-url', ''];\n  options = options || {};\n  var policyOption;\n\n  if ('policy' in options) {\n    policyOption = options.policy;\n  } else {\n    policyOption = DEFAULT_POLICY;\n  }\n\n  var policies = Array.isArray(policyOption) ? policyOption : [policyOption];\n\n  if (policies.length === 0) {\n    throw new Error('At least one policy must be supplied.');\n  }\n\n  var policiesSeen = new Set();\n  policies.forEach(function (policy) {\n    if (typeof policy !== 'string' || ALLOWED_POLICIES.indexOf(policy) === -1) {\n      var allowedPoliciesErrorList = ALLOWED_POLICIES.map(function (policy) {\n        if (policy.length) {\n          return \"\\\"\" + policy + \"\\\"\";\n        } else {\n          return 'and the empty string';\n        }\n      }).join(', ');\n      throw new Error(\"\\\"\" + policy + \"\\\" is not a valid policy. Allowed policies: \" + allowedPoliciesErrorList + \".\");\n    }\n\n    if (policiesSeen.has(policy)) {\n      throw new Error(\"\\\"\" + policy + \"\\\" specified more than once. No duplicates are allowed.\");\n    }\n\n    policiesSeen.add(policy);\n  });\n  return policies.join(',');\n}\n\nmodule.exports = function referrerPolicy(options) {\n  var headerValue = getHeaderValueFromOptions(options);\n  return function referrerPolicy(_req, res, next) {\n    res.setHeader('Referrer-Policy', headerValue);\n    next();\n  };\n};","map":null,"metadata":{},"sourceType":"script"}